/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Clases.IdentidadValidator;
import ConsultasSQL.QuerysEmpleados;
import Controlador.Clientes;
import javax.swing.JOptionPane;
import Controlador.Empleados;
import static Vistas.MostrarEmpleados.totalPages;



/**
 *
 * @author Josue
 */
public class EditarEmpleados extends javax.swing.JFrame {

    /**
     * Creates new form Proveedores
     */
    public EditarEmpleados() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
       // initComponents();
        //setLocationRelativeTo(null);
        //setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        txt_Id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fmt_identidad = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_guardar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        fmt_telefono = new javax.swing.JFormattedTextField();
        cbxEstado = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tex_direccion = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        cbxCargo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txt_NomEme = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        fmt_telefonoEmergencia = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(253, 253, 253));
        jPanel1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel1.setText("Nombre:");

        txt_nombre.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel2.setText("Apellido:");

        txt_apellido.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        txt_apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_apellidoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel3.setText("Identidad:");

        try {
            fmt_identidad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####-#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel4.setText("Teléfono:");

        btn_guardar.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/editarN.jpg"))); // NOI18N
        btn_guardar.setText("Actualizar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_cancelar.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelarr.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Editar empleado");

        try {
            fmt_telefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fmt_telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmt_telefonoActionPerformed(evt);
            }
        });
        fmt_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fmt_telefonoKeyTyped(evt);
            }
        });

        cbxEstado.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "activo", "inactivo" }));

        jLabel10.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel10.setText("Estado:");

        jLabel8.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel8.setText("Dirección:");

        tex_direccion.setColumns(20);
        tex_direccion.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        tex_direccion.setLineWrap(true);
        tex_direccion.setRows(5);
        tex_direccion.setWrapStyleWord(true);
        tex_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tex_direccionKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tex_direccion);

        jLabel9.setFont(new java.awt.Font("Dubai", 0, 16)); // NOI18N
        jLabel9.setText("Cargo:");

        cbxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente ", "Administrador", "Personal de aseo", "Barbero", "Manicurista y pedicurista", "Cuidado Personal" }));
        cbxCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCargoActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(253, 253, 253));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos en caso de emergencia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 14), new java.awt.Color(0, 102, 204))); // NOI18N

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel6.setText("Nombre contacto de emergencia:");

        txt_NomEme.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        txt_NomEme.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NomEmeKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        jLabel7.setText("Número de emergencia:");

        try {
            fmt_telefonoEmergencia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fmt_telefonoEmergencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fmt_telefonoEmergenciaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fmt_telefonoEmergencia, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_NomEme, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txt_NomEme, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fmt_telefonoEmergencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ListaodologoBarberia (1).png"))); // NOI18N
        jLabel11.setText("jLabel11");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_nombre)
                                            .addComponent(fmt_identidad)
                                            .addComponent(cbxCargo, 0, 178, Short.MAX_VALUE))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel10)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                            .addComponent(fmt_telefono)
                                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1)))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(btn_guardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fmt_identidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(fmt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_guardar)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
         String nomEmp = txt_nombre.getText().trim();
         String estado = cbxEstado.getSelectedItem().toString();
         int idText = Integer.parseInt(txt_Id.getText().trim());
         
         if (Empleados.ValidarIdentidadEditar(fmt_identidad.getText(), Integer.parseInt(txt_Id.getText().trim()))) {
            JOptionPane.showMessageDialog(null, "La identidad ingresado ya existe.", "Error al guardar", JOptionPane.WARNING_MESSAGE);             
            return;
        }
          
        if (Empleados.ValidarTelefonoEditar(fmt_telefono.getText(), Integer.parseInt(txt_Id.getText().trim()))) {
            JOptionPane.showMessageDialog(null, "La teléfono ingresado ya existe.", "Error al guardar", JOptionPane.WARNING_MESSAGE);             
            return;
        }

        if (nomEmp.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre del empleado no puede estar vacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);             
            JOptionPane.showMessageDialog(this, "");
            return; // Salir del método si el campo está vacío
        }
        if (!nomEmp.matches("[a-zA-Záéíóúñ][a-zA-Z áéíóúñ]+")) {
            JOptionPane.showMessageDialog(null, "El nombre del empleado solo puede contener letras.", "Error al guardar", JOptionPane.WARNING_MESSAGE);             
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
        
         String apeEmp = txt_apellido.getText().trim(); // Eliminar espacios en blanco al inicio y al final
        if (apeEmp.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El apellido del empleado no puede estar vacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el campo está vacío
        }
        if (!apeEmp.matches("[a-zA-Záéíóúñ][a-zA-Z áéíóúñ]+")) {
            JOptionPane.showMessageDialog(null, "El apellido del empleado solo puede contener letras.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
       
        String ideEmp = fmt_identidad.getText().trim(); // Eliminar espacios en blanco al inicio y al final
        if (ideEmp.isEmpty()) {
            JOptionPane.showMessageDialog(null, "el numero de identidad está vacío.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el campo está vacío
        }
        if (!ideEmp.matches("[0-9][-0-9]+")) {
            JOptionPane.showMessageDialog(null, "La identidad no puede estar vacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
        if(ideEmp.equals("0000-0000-00000")){
            JOptionPane.showMessageDialog(null, "La identidad no puede ser cero.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
                        return;
            }
               
        String telEmp = fmt_telefono.getText().trim(); // Eliminar espacios en blanco al inicio y al final
        if (telEmp.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo de telefono está vacío.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el campo está vacío
        }
         if (!telEmp.matches("[0-9][-0-9]+")) {
            JOptionPane.showMessageDialog(null, "El telefono no debe estar vacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
       
       if (telEmp.equals("0000-0000")) {
           JOptionPane.showMessageDialog(null, "El teléfono no debe ser cero.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
           return; // Salir del método si el teléfono no es válido
         }
       String nomEme = txt_NomEme.getText().trim(); // Eliminar espacios en blanco al inicio y al final
        if (nomEme.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El nombre de contacto de emergencia del empleado no puede estar vacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el campo está vacío
        }
        if (!nomEme.matches("[a-zA-Záéíóúñ][a-zA-Z áéíóúñ]+")) {
            JOptionPane.showMessageDialog(null, "El nombre de contacto de emergencia del empleado solo puede contener letras.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
        
        String telEme = fmt_telefonoEmergencia.getText().trim(); // Eliminar espacios en blanco al inicio y al final
        if (telEme.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo de telefono está vacío.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el campo está vacío
        }
         if (!telEme.matches("[0-9][-0-9]+")) {
            JOptionPane.showMessageDialog(null, "El telefono no debe estar vacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
       
       if (telEme.equals("0000-0000")) {
           JOptionPane.showMessageDialog(null, "El teléfono no debe ser cero.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
           return; // Salir del método si el teléfono no es válido
         }
       
        String texdire = tex_direccion.getText().trim(); // Eliminar espacios en blanco al inicio y al final
        if (texdire.isEmpty()) {
            JOptionPane.showMessageDialog(null, "La dirección es requerida.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el campo está vacío
        }
        if (!texdire.matches("[a-zA-Záéíóúñ][a-zA-Záéíóúñ 0-9]+")) {
            JOptionPane.showMessageDialog(null, "La dirección solo puede contener letras y numeros.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            return; // Salir del método si el nombre contiene caracteres no válidos
        }
        
         String identidad = fmt_identidad.getText(); // Obtener el texto ingresado en el campo fmt_identidad
         String Cargo = cbxCargo.getSelectedItem().toString();
        // Crear una instancia del validador de identidad
        IdentidadValidator validator = new IdentidadValidator();

        // Validar la identidad utilizando el método validarIdentidad del validador
        if (validator.validarIdentidad(identidad)) {
            // Crear una instancia de QuerysProductos
            QuerysEmpleados querys = new QuerysEmpleados();
            querys.setNombre(nomEmp);
            querys.setApellido(apeEmp);
            querys.setIdentidad(ideEmp);
            querys.setTelefono(telEmp);
            querys.setCargo(Cargo);
            querys.setEstado(estado);
            querys.setDireccion(texdire);
            querys.setNombreEmergencia(nomEme);
            querys.setTelefonoemergencia(telEme);
            querys.setId(idText);

            // Llamar al método Guardar de la clase Productos para guardar los datos
            if (Empleados.Editar(querys)) {
                JOptionPane.showMessageDialog(null, "Empleado editado exitosamente","Guardado con éxito", JOptionPane.INFORMATION_MESSAGE);
                 
                int paginaAct = 1;
                 Empleados.MostrarEmpleados("", paginaAct,MostrarEmpleados.totalPages,estado);
                //Empleados.MostrarEmpleados("");
                dispose();
            } else {
                JOptionPane.showMessageDialog(null, "El Telefono o la identidad ya estan ingresados", "Error al guardar", JOptionPane.OK_OPTION);               
            }
        } else {
            // La identidad no es válida, mostrar mensaje de error.
            JOptionPane.showMessageDialog(null, "Identidad inválida: " + identidad, "Validación de Identidad",JOptionPane.ERROR_MESSAGE);
        }   
    

    }//GEN-LAST:event_btn_guardarActionPerformed


    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed



    private void fmt_rtnKeyTyped(java.awt.event.KeyEvent evt) {                                 
        // TODO add your handling code here:
    }                                
    // TODO add your handling code here:

    private void fmt_rtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fmt_rtnKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmt_rtnKeyPressed
   

    private int getCursorPositionNombre() {
        return txt_nombre.getCaretPosition();   
    }

    // Método para establecer la posición del cursor
    private void setCursorPositionNombre(int position) {
        txt_nombre.setCaretPosition(position);
    }


    private void txt_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyTyped
      String Valor = txt_nombre.getText();

            if (!Valor.isEmpty()) {
                int cursorPosition = getCursorPositionNombre(); // Obtener posición actual del cursor

                char primeraLetra = Character.toUpperCase(Valor.charAt(0));
                txt_nombre.setText(primeraLetra + Valor.substring(1));

                setCursorPositionNombre(cursorPosition); // Restaurar posición del cursor
            }
        
        
       if (Valor.startsWith(" ")){
           
             //JOptionPane.showMessageDialog(this, "el nombre no puede iniciar con espacios ");// no puede iniciar con  espacios
          txt_nombre.setText(Valor);
          return;
        }
       if(Valor.length()>=40){
     //  JOptionPane.showMessageDialog(this, "el nombre no puede contener mas de 40 letras");
     evt.consume();
       }

    }//GEN-LAST:event_txt_nombreKeyTyped

        private int getCursorPositionApellido() {
        return txt_apellido.getCaretPosition();   
    }

    // Método para establecer la posición del cursor
    private void setCursorPositionApellido(int position) {
        txt_apellido.setCaretPosition(position);
    }
    
    private void txt_apellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_apellidoKeyTyped
      String Valor =txt_apellido.getText();
        
        if (!Valor.isEmpty()) {// que la primera letra sea mayuscula
            int cursorPosition = getCursorPositionApellido();
        char primeraLetra = Character.toUpperCase(Valor.charAt(0));
         txt_apellido.setText(primeraLetra + Valor.substring(1));
         setCursorPositionApellido(cursorPosition); 
        }
        
        
               
       if (Valor.startsWith(" ")){
             JOptionPane.showMessageDialog(this, "el nombre de empresa no puede iniciar con espacios ");// no puede iniciar con  espacios
          txt_apellido.setText(Valor);
          return;
        }
       if(Valor.length()>=40){
      // JOptionPane.showMessageDialog(this, "el nombre de empresa no puede contener mas de 40 letras");
       evt.consume();
       }
    }//GEN-LAST:event_txt_apellidoKeyTyped

    private void fmt_telefonoEmergenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fmt_telefonoEmergenciaKeyTyped
    String telefono = fmt_telefonoEmergencia.getText();
        if(telefono.equals("0000-0000")){
            JOptionPane.showMessageDialog(null, "No se acepta el telefono 0000-0000.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
        }


        if (!telefono.isEmpty() && "014567".contains(telefono.substring(0, 1))) {
            JOptionPane.showMessageDialog(null, "AL inicio solo se permiten los siguentes numeros: 3,9,8 y 2.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            // Emitir un sonido de error
            getToolkit().beep();
            // Consumir el evento para evitar que se ingrese el dígito
            evt.consume();
        }
        
    }//GEN-LAST:event_fmt_telefonoEmergenciaKeyTyped

    private void fmt_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fmt_telefonoKeyTyped
        String telefono = fmt_telefono.getText();

        if (!telefono.isEmpty() && "014567".contains(telefono.substring(0, 1))) {
            JOptionPane.showMessageDialog(null, "AL inicio solo se permiten los siguentes numeros: 3,9,8 y 2.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
            // Emitir un sonido de error
            getToolkit().beep();
            // Consumir el evento para evitar que se ingrese el dígito
            evt.consume();
        }
        
         if(telefono.equals("0000-0000")){
             JOptionPane.showMessageDialog(null, "No se acepta el telefono 0000-0000.", "Error al guardar", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_fmt_telefonoKeyTyped
    
        private int getCursorPositionNombreEme() {
        return txt_NomEme.getCaretPosition();   
    }

    // Método para establecer la posición del cursor
    private void setCursorPositionNombreEme(int position) {
        txt_NomEme.setCaretPosition(position);
    }
    
    private void txt_NomEmeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NomEmeKeyTyped
        String Valor =txt_NomEme.getText();
        
        if (!Valor.isEmpty()) {// que la primera letra sea mayuscula
            int cursorPosition = getCursorPositionNombreEme();
        char primeraLetra = Character.toUpperCase(Valor.charAt(0));
         txt_NomEme.setText(primeraLetra + Valor.substring(1));
         setCursorPositionNombreEme(cursorPosition); 
        }
               
       if (Valor.startsWith(" ")){
           JOptionPane.showMessageDialog(null, "El nombre de contacto de emergencia no puede iniciar con espacios.", "Error al guardar", JOptionPane.WARNING_MESSAGE);// no puede iniciar con  espacios
          txt_NomEme.setText(Valor);
          return;
        }
       if(Valor.length()>=40){
      // JOptionPane.showMessageDialog(this, "el nombre de empresa no puede contener mas de 40 letras");
       evt.consume();
       }
    }//GEN-LAST:event_txt_NomEmeKeyTyped
    
        private int getCursorPositionDireccion() {
        return tex_direccion.getCaretPosition();   
    }

    // Método para establecer la posición del cursor
    private void setCursorPositionDireccion(int position) {
        tex_direccion.setCaretPosition(position);
    }
    
    private void tex_direccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tex_direccionKeyTyped
        String Valor =tex_direccion.getText();
        
        if (!Valor.isEmpty()) {// que la primera letra sea mayuscula
            int cursorPosition = getCursorPositionDireccion();
        char primeraLetra = Character.toUpperCase(Valor.charAt(0));
         tex_direccion.setText(primeraLetra + Valor.substring(1));
         setCursorPositionDireccion(cursorPosition);
        }
               
       if (Valor.startsWith(" ")){
           JOptionPane.showMessageDialog(null, "La direccion no puede iniciar con un espacio.", "Error al guardar", JOptionPane.WARNING_MESSAGE);// no puede iniciar con  espacios
          tex_direccion.setText(Valor);
          return;
        }
       if(Valor.length()>=80){
       //JOptionPane.showMessageDialog(this, "La direccion no puede contener mas de 60 letras");
       evt.consume();
       }
    }//GEN-LAST:event_tex_direccionKeyTyped

    private void fmt_telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmt_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmt_telefonoActionPerformed

    private void cbxCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCargoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmpleadosStore().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_guardar;
    public static javax.swing.JComboBox<String> cbxCargo;
    public static javax.swing.JComboBox<String> cbxEstado;
    public static javax.swing.JFormattedTextField fmt_identidad;
    public static javax.swing.JFormattedTextField fmt_telefono;
    public static javax.swing.JFormattedTextField fmt_telefonoEmergencia;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea tex_direccion;
    public static javax.swing.JTextField txt_Id;
    public static javax.swing.JTextField txt_NomEme;
    public static javax.swing.JTextField txt_apellido;
    public static javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}

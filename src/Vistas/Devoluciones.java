/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Conexion.Conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Admin
 */
public class Devoluciones extends javax.swing.JFrame {
    private int filaSeleccionada = -1;
    private boolean cambiosEnTabla = false;

    Conexion enlace = new Conexion();
    Connection conection = enlace.getConexion();
    /**
     * Creates new form VerCompras
     */
    public Devoluciones() {
        initComponents();
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(Color.white);
        Fecha.setDate(new Date());
        Fecha.setEnabled(false);
    }
    private String id; // Declarar un campo para almacenar el id
    public Devoluciones(String id) {
        initComponents();
        Fecha.setDate(new Date());
        Fecha.setEnabled(false);
        this.id = id; // Inicializar el campo con el valor pasado al constructor
        System.out.println("ID: "+id);
        Controlador.Devoluciones.Devoluciones(id);
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(Color.white);
        DefaultTableModel model = (DefaultTableModel) tblDetalle.getModel();
        model.addTableModelListener(e -> {
            calcularTotalFactura();
        });
        
        tblDetalle.getSelectionModel().addListSelectionListener(e -> {
            filaSeleccionada = tblDetalle.getSelectedRow();
        });
   
    }
    
    private static void createAndShowGUI() {
        JFrame frame = new JFrame("Limitar Palabras en JTextArea");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JTextArea txtDescripcion = new JTextArea();
        limitarPalabras(txtDescripcion, 255); // Límite de 300 palabras

        JScrollPane scrollPane = new JScrollPane(txtDescripcion);

        frame.getContentPane().add(scrollPane);
        frame.setSize(400, 300);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private static void limitarPalabras(JTextArea textArea, int limite) {
        AbstractDocument doc = (AbstractDocument) textArea.getDocument();
        doc.setDocumentFilter(new DocumentFilter() {
            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                super.replace(fb, offset, length, text, attrs);

                // Contar palabras después de la inserción
                String[] words = fb.getDocument().getText(0, fb.getDocument().getLength()).split("\\s+");
                if (words.length > limite) {
                    JOptionPane.showMessageDialog(null, "Se excedió el límite de palabras (" + limite + ").", "Error", JOptionPane.ERROR_MESSAGE);
                    // Si excede el límite, eliminar la última palabra
                    fb.remove(0, fb.getDocument().getLength());
                    for (int i = 0; i < limite; i++) {
                        fb.insertString(fb.getDocument().getLength(), words[i] + " ", null);
                    }
                }
            }
        });
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnEliminarP = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        lbltotal = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblFactura = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblCai = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        Fecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lbltotal1 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetalle1 = new javax.swing.JTable();
        lbltotal2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 254));

        btnEliminarP.setText("Devolver Producto");
        btnEliminarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPActionPerformed(evt);
            }
        });

        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Producto", "Precio", "Cantidad", "SubTotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetalle);
        if (tblDetalle.getColumnModel().getColumnCount() > 0) {
            tblDetalle.getColumnModel().getColumn(0).setMinWidth(50);
            tblDetalle.getColumnModel().getColumn(0).setPreferredWidth(2);
            tblDetalle.getColumnModel().getColumn(0).setMaxWidth(50);
            tblDetalle.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblDetalle.getColumnModel().getColumn(2).setMinWidth(75);
            tblDetalle.getColumnModel().getColumn(2).setMaxWidth(75);
            tblDetalle.getColumnModel().getColumn(3).setMinWidth(75);
            tblDetalle.getColumnModel().getColumn(3).setMaxWidth(75);
            tblDetalle.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        lbltotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbltotal.setText("Monto a devolver:");

        btnVolver.setBackground(new java.awt.Color(253, 253, 252));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/volver.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(253, 253, 253));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reembolso.png"))); // NOI18N
        btnGuardar.setText("Renvolsar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(253, 253, 253));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de la factura", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 14), new java.awt.Color(0, 102, 204))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(153, 153, 255));
        jPanel3.setToolTipText("");
        jPanel3.setPreferredSize(new java.awt.Dimension(333, 133));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("No Factura:");

        lblFactura.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFactura.setText("a");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Fecha:");

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFecha.setText("2023-00-00");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("CAI:");

        lblCai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCai.setText("00000-1213-11132-1111");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Cliente:");

        lblCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCliente.setText("a");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFecha)
                            .addComponent(lblFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCai, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFactura)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblCai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblFecha))
                .addGap(0, 30, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(253, 253, 253));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de devolución", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 14), new java.awt.Color(0, 102, 204))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(153, 153, 255));
        jPanel4.setToolTipText("");

        txtDescripcion.setColumns(20);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        txtDescripcion.setWrapStyleWord(true);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(txtDescripcion);

        Fecha.setToolTipText("");
        Fecha.setDateFormatString("y-M-d");
        Fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FechaKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Fecha:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Descripción:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbltotal1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbltotal1.setText("Productos facturados:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Cantidad:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Devoluciones");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ListaodologoBarberia.png"))); // NOI18N
        jLabel7.setText("jLabel7");

        tblDetalle1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num", "Producto", "Precio", "Cantidad", "SubTotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDetalle1);
        if (tblDetalle1.getColumnModel().getColumnCount() > 0) {
            tblDetalle1.getColumnModel().getColumn(0).setMinWidth(50);
            tblDetalle1.getColumnModel().getColumn(0).setPreferredWidth(2);
            tblDetalle1.getColumnModel().getColumn(0).setMaxWidth(50);
            tblDetalle1.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblDetalle1.getColumnModel().getColumn(2).setMinWidth(75);
            tblDetalle1.getColumnModel().getColumn(2).setMaxWidth(75);
            tblDetalle1.getColumnModel().getColumn(3).setMinWidth(75);
            tblDetalle1.getColumnModel().getColumn(3).setMaxWidth(75);
            tblDetalle1.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        lbltotal2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbltotal2.setText("Productos a devolver:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(345, 345, 345))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lbltotal1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminarP))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbltotal, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(304, 304, 304)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lbltotal2, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(272, 272, 272))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEliminarP)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(lbltotal1))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbltotal2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbltotal)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardar)
                    .addComponent(btnVolver))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("\"Detalle de factura\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        // TODO add your handling code here:
        //cambiar el color del boton
        //btnGuardar.setBackground(new Color(135, 206, 235));
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        //Guardar en la base de datos
        //validaciones
        // Obtener el texto de la fecha
        String fechaText = ((JTextField)Fecha.getDateEditor().getUiComponent()).getText();
        // Continuar con el resto del código...
        String fcha = fechaText;
        DefaultTableModel model = (DefaultTableModel) tblDetalle1.getModel();
        
        if (fechaText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Salir del método si hay un error
        }else if (txtDescripcion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "La descripción está vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }else if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registros en la tabla para guardar", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            
                for (int i = 0; i < model.getRowCount(); i++) {
                    // Obtener los datos de la fila actual
                    String producto = model.getValueAt(i, 0).toString();
                    double precio = Double.parseDouble(model.getValueAt(i, 2).toString());
                    int cantidad = Integer.parseInt(model.getValueAt(i, 3).toString());
                    double subtotal = Double.parseDouble(model.getValueAt(i, 4).toString());
                    // Obtener el texto del JLabel
                    String totalText = lbltotal.getText();

                    // Eliminar el texto "Total:" y convertir el resto a double
                    double total = Double.parseDouble(totalText.replace("Monto a devolver: ", ""));

                    try {
                        PreparedStatement guardar = conection.prepareStatement("INSERT INTO devoluciones(id_ventas,producto_devolver,descripcion,fecha,cantidad,precio,subtotal,monto_a_devolver)VALUES(?,?,?,?,?,?,?,?)");
                        // Insertar los datos en la base de datos (personaliza la sentencia SQL)
                        guardar.setString(1,id);
                        guardar.setString(2, producto);
                        guardar.setString(3,txtDescripcion.getText().trim());
                        guardar.setString(4, fcha);
                        guardar.setInt(5, cantidad);
                        guardar.setDouble(6, precio);
                        guardar.setDouble(7, subtotal);
                        guardar.setDouble(8,total);
                        guardar.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Devolución exitosamente");
                        this.dispose();
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error al guardar el registro: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPActionPerformed
        // Verificar si hay una fila seleccionada en tblDetalle
if (filaSeleccionada != -1) {
    // Obtener el texto actual en txtCantidad
    String cantidadTexto = txtCantidad.getText().trim();

    // Verificar si el texto está vacío
    if (!cantidadTexto.isEmpty()) {
        try {
            // Obtener la cantidad ingresada en txtCantidad
            int cantidadTransferir = Integer.parseInt(cantidadTexto);

            // Validar que la cantidad a transferir no sea 0 ni mayor que la cantidad original
            if (cantidadTransferir <= 0 || cantidadTransferir > Integer.parseInt(tblDetalle.getValueAt(filaSeleccionada, 3).toString())) {
                JOptionPane.showMessageDialog(this, "La cantidad a devolver no es válida.", "Error de cantidad",
                        JOptionPane.ERROR_MESSAGE);
                return; // Salir del método si la cantidad no es válida
            }

            // Obtener los datos de la fila seleccionada en tblDetalle
            String numero = tblDetalle.getValueAt(filaSeleccionada, 0).toString();
            String producto = tblDetalle.getValueAt(filaSeleccionada, 1).toString();
            double precio = Double.parseDouble(tblDetalle.getValueAt(filaSeleccionada, 2).toString());
            int cantidadOriginal = Integer.parseInt(tblDetalle.getValueAt(filaSeleccionada, 3).toString());
            double subtotalOriginal = Double.parseDouble(tblDetalle.getValueAt(filaSeleccionada, 4).toString());

            // Verificar si el producto ya está en tblDetalle1
            DefaultTableModel model1 = (DefaultTableModel) tblDetalle1.getModel();
            int filaExistente = -1;
            for (int i = 0; i < model1.getRowCount(); i++) {
                if (producto.equals(model1.getValueAt(i, 1).toString())) {
                    filaExistente = i;
                    break;
                }
            }
            
            // Si el producto ya está en tblDetalle1, actualizar la cantidad
            if (filaExistente != -1) {
                int cantidadExistente = Integer.parseInt(model1.getValueAt(filaExistente, 3).toString());

                // Validar que la nueva cantidad no sea menor que cero
                if (cantidadTransferir < 0) {
                    JOptionPane.showMessageDialog(this, "La nueva cantidad debe ser mayor o igual a cero.",
                            "Error de cantidad", JOptionPane.ERROR_MESSAGE);
                    return; // Salir del método si la cantidad no es válida
                }

                // Si la nueva cantidad es menor o igual que la existente o igual a la cantidad original en tblDetalle, actualizar la cantidad
                if (cantidadTransferir <= cantidadExistente || cantidadTransferir <= cantidadOriginal) {
                    double nuevoSubtotal = cantidadTransferir * precio;
                    model1.setValueAt(cantidadTransferir, filaExistente, 3);
                    model1.setValueAt(nuevoSubtotal, filaExistente, 4);
                } else {
                    JOptionPane.showMessageDialog(this, "La nueva cantidad debe ser menor o igual que la cantidad facturada.",
                            "Error de cantidad", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                // Si el producto no está en tblDetalle1, agregar una nueva fila
                Object[] filaTransferida = {numero, producto, precio, cantidadTransferir, cantidadTransferir * precio};
                model1.addRow(filaTransferida);
            }


            // Volver a calcular el total de la factura en tblDetalle
            calcularTotalFactura();

            // Limpiar el texto en txtCantidad
            txtCantidad.setText("");
        } catch (NumberFormatException e) {
            // Manejar el caso en que el texto en txtCantidad no sea un número
            JOptionPane.showMessageDialog(this, "Ingrese un número válido en la cantidad.",
                    "Error de formato", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Ingrese la cantidad a devolver.",
                "Error de cantidad", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Seleccione un producto facturado",
            "Error de selección", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnEliminarPActionPerformed
    

    // Función para obtener la suma de cantidades en tblDetalle1
    private int sumaCantidadesTblDetalle1() {
        int suma = 0;
        DefaultTableModel model1 = (DefaultTableModel) tblDetalle1.getModel();
        for (int i = 0; i < model1.getRowCount(); i++) {
            suma += Integer.parseInt(model1.getValueAt(i, 3).toString());
        }
        return suma;
    }

    // Función para obtener la suma de cantidades originales en tblDetalle
    private int sumaCantidadesOriginalesTblDetalle() {
        int suma = 0;
        DefaultTableModel model = (DefaultTableModel) tblDetalle.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            suma += Integer.parseInt(model.getValueAt(i, 3).toString());
        }
        return suma;
    }
    
    
    private void FechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_FechaKeyTyped

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        String notas = txtDescripcion.getText();
        if(notas.length()>=255){
       //JOptionPane.showMessageDialog(this, "La direccion no puede contener mas de 60 letras");
       evt.consume();
       }
    }//GEN-LAST:event_txtDescripcionKeyTyped
        
    private double totalFactura = 0.0;

    private void calcularTotalFactura() {
        DefaultTableModel model = (DefaultTableModel) tblDetalle1.getModel();
        totalFactura = 0.0;

        for (int i = 0; i < model.getRowCount(); i++) {
            try {
                int cantidad = Integer.parseInt(model.getValueAt(i, 3).toString());
                double precio = Double.parseDouble(model.getValueAt(i, 2).toString());
                double subtotal = cantidad * precio;
                totalFactura += subtotal;
            } catch (NumberFormatException e) {
                // Manejar el caso en que la cantidad o el precio no puedan convertirse a números
                System.err.println("Error en la fila " + i + ": La cantidad o el precio no son válidos");
            }
        }

        lbltotal.setText("Monto a devolver: " + totalFactura);
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> createAndShowGUI());
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Devoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Devoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Devoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Devoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Devoluciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fecha;
    private javax.swing.JButton btnEliminarP;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JLabel lblCai;
    public javax.swing.JLabel lblCliente;
    public javax.swing.JLabel lblFactura;
    public static javax.swing.JLabel lblFecha;
    public static javax.swing.JLabel lbltotal;
    public static javax.swing.JLabel lbltotal1;
    public static javax.swing.JLabel lbltotal2;
    public static javax.swing.JTable tblDetalle;
    public static javax.swing.JTable tblDetalle1;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextArea txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
